{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/ProfileBio/ProfileBio.jsx","components/PostCard/PostCard.jsx","components/Loader/Loader.jsx","components/PostGallery/PostGallery.jsx","components/Header/Header.jsx","utils/postApi.js","pages/Profile/Profile.jsx","utils/likesApi.js","pages/Feed/Feed.jsx","components/PostDisplay/PostDisplay.jsx","pages/PostDetailPage/PostDetail.jsx","components/AddPost/AddPost.jsx","pages/Write/Write.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenService","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","console","log","fetch","method","body","then","res","ok","json","response","Error","err","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","isPasswordMatch","passwordOne","passwordConf","SignUpPage","useState","message","passwordError","setError","email","password","bio","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","preventDefault","key","formData","FormData","append","handleSignUpOrLogin","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","TextArea","label","Field","files","Button","LoginPage","fluid","size","Message","to","ProfileBio","columns","Row","photoUrl","avatar","vertical","PostCard","post","isProfile","addLike","removeLike","loggedUser","handleDeletePost","likedIndex","likes","findIndex","like","likeColor","clickHandler","_id","Card","raised","Content","wrapped","ui","Description","title","content","Icon","onClick","length","Loading","Loader","active","PostGallery","numPhotosCol","posts","loading","removePost","Group","itemsPerRow","stackable","Dimmer","inverted","map","PageHeader","handleLogout","clearing","floated","create","getAll","getPost","id","deletePost","postId","ProfilePage","setPosts","profileUser","setProfileUser","setLoading","useParams","postsApi","useCallback","data","useEffect","centered","likeId","Feed","likesAPI","getPosts","postsAPI","PostDisplayForm","PostDetail","AddPostForm","handleAddPost","Write","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fcb6c667.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n const tokenService = {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };\n\n  export default tokenService;","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\n\n\n// PROFILE PAGE\nfunction getProfile(username) {\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // <- since this will be called when we're logged in, send over the jwt token\n      // so the server knows who's making the request from the client\n    },\n  }).then((res) => {\n    // This function happens when the browser recieves a response from the express server\n\n    if (res.ok) return res.json();\n    throw new Error(\n      \"Error from getProfile Request, check the server terminal!\"\n    );\n  });\n}\n\nfunction signup(user) {\n  console.log(user, \"<-user in signup\");\n  return fetch(BASE_URL + \"signup\", {\n    method: \"POST\",\n    body: user\n  })\n  .then((res) => {\n    if (res.ok) return res.json();\n    return res.json().then((response) => {\n      console.log(response);\n      throw new Error(response.err);\n    });\n  })\n  .then(({ token }) => tokenService.setToken(token));\n}\n\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      return res.json().then((response) => {\n        console.log(response);\n        throw new Error(response.err);\n      });\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nconst userService = {\n  signup,\n  logout,\n  login,\n  getUser,\n  getProfile,\n};\n\nexport default userService;\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\n  function isPasswordMatch(passwordOne, passwordConf) {\n    return passwordOne === passwordConf;\n  }\n  \n  export default function SignUpPage(props) {\n    const [error, setError] = useState({\n      message: '',\n      passwordError: false\n    });\n    \n    const [state, setState] = useState({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConf: \"\",\n      bio: \"\",\n    });\n\n    const[selectedFile, setSelectedFile] = useState(\"\");\n  \n    const navigate = useNavigate();\n  \n    function handleChange(e) {\n      setState({\n        ...state,\n        [e.target.name]: e.target.value,\n      });\n    }\n  \n    async function handleSubmit(e) {\n      e.preventDefault(); \n  \n      if (!isPasswordMatch(state.password, state.passwordConf)) return setError({message: 'Passwords Must Match!', passwordError: true});\n      setError({message: '', passwordError: false})\n      \n      const formData = new FormData(); \n      formData.append(\"photo\", selectedFile);\n      \n      for (let key in state) {\n        formData.append(key, state[key]);\n      }\n  \n      try {\n        await userService.signup(formData); \n        props.handleSignUpOrLogin(); \n        navigate(\"/\"); \n      } catch (err) {\n        console.log(err);\n        setError({message: err.message, passwordError: false});\n      }\n    }\n\n    function handleFileInput(e) {\n      console.log(e.target.files, \" < - this is e.target.files!\");\n      setSelectedFile(e.target.files[0]);\n    }\n\n\n  return (\n    <Grid\n    textAlign=\"center\"\n    style={{ height: \"100vh\", width: \"100vw\" }}\n    verticalAlign=\"middle\"\n  >\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as=\"h1\" color=\"orange\" textAlign=\"center\">\n        <Image src=\"https://i.imgur.com/7qNjX9j.png\" /> Sign Up\n      </Header>\n      <Form onSubmit={handleSubmit}>\n        <Segment stacked>\n          <Form.Input\n            name=\"username\"\n            placeholder=\"username\"\n            value={state.username}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={state.email}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            error={error.passwordError}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            value={state.password}\n            onChange={handleChange}\n            required\n          />\n          <Form.Input\n            error={error.passwordError}\n            name=\"passwordConf\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={state.passwordConf}\n            onChange={handleChange}\n            required\n          />\n          <Form.TextArea\n              label=\"bio\"\n              name=\"bio\"\n              placeholder=\"Bio\"\n              value={state.bio}\n              onChange={handleChange}\n            />\n          <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n          <Button type=\"submit\" className=\"btn\">\n            Signup\n          </Button>\n        </Segment>\n        {error.message ? <ErrorMessage error={error.message} /> : null}\n      </Form>\n    </Grid.Column>\n  </Grid>\n);\n  }\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    try {\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch(err){\n      setError(err.message)\n    }\n  }\n\n\n\n  return (\n    <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\", width: \"100vw\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"orange\" textAlign=\"center\">\n            <Image src=\"https://i.imgur.com/7qNjX9j.png\" /> Log-in to your\n            account\n          </Header>\n          <Form onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"orange\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            Want to Join Good Company? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n  );\n}\n\n","import { Image, Grid, Segment } from \"semantic-ui-react\";\n\nfunction ProfileBio({ user }) {\n  return (\n    <Grid textAlign=\"center\" columns={2}>\n      <Grid.Row>\n        <Grid.Column>\n          <Image\n            src={`${\n              user.photoUrl\n                ? user.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            } `}\n            avatar\n            size=\"small\"\n          />\n        </Grid.Column>\n        <Grid.Column textAlign=\"left\" style={{ maxWidth: 450 }}>\n          <Segment vertical>\n            <h3>{user.username}</h3>\n          </Segment>\n          <Segment>\n            <span> Bio: {user.bio}</span>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default ProfileBio;\n","import React, { useState } from \"react\";\nimport { Card, Image, Icon, Segment } from \"semantic-ui-react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction PostCard({\n  post,\n  isProfile,\n  addLike,\n  removeLike,\n  loggedUser,\n  handleDeletePost,\n}) {\n\nconst [state, setState] = useState(false);\n\n  //----DELETE----//\n\n  function handlesubmit(e) {\n    e.preventDefault();\n    const request = post._id;\n    handleDeletePost(request);\n    setState(false)\n  }\n\n  //   async function deleteClickHandler(e) {\n  //     try {\n  //       const response = await removePost(post._id);\n  //       console.log(response, \"<---remove post\");\n  //       navigate(\"/\")\n  //     } catch (err) {\n  //       console.log(err,\"this is the error\")\n  //     }\n  //   }\n\n  //----LIKES----//\n  const likedIndex = post.likes.findIndex(\n    (like) => like.username === loggedUser.username\n  );\n\n  // if likedIndex is -1 the color should be 'grey' (the user wasn't in the post.likes array)\n  // likedIndex is greater then -1 (the user is in the post.likes array) the color should be red\n  const likeColor = likedIndex > -1 ? \"red\" : \"grey\";\n\n  const clickHandler =\n    likedIndex > -1\n      ? () => removeLike(post.likes[likedIndex]._id) // user has liked the post\n      : () => addLike(post._id); // user hasn't liked the post handler\n\n  return (\n    <Card key={post._id} raised>\n      {isProfile ? (\n        \"\"\n      ) : (\n        <Card.Content textAlign=\"left\">\n          <Card.Header>\n            <Link to={`/${post.user.username}`}>\n              <Image\n                size=\"large\"\n                avatar\n                src={\n                  post.user.photoUrl\n                    ? post.user.photoUrl\n                    : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                }\n              />\n              {post.user.username}\n            </Link>\n          </Card.Header>\n        </Card.Content>\n      )}\n      <Image src={`${post?.photoUrl}`} wrapped ui={false} />\n      <Card.Content>\n        <Card.Description>{post.title}</Card.Description>\n      </Card.Content>\n      <Card.Content>\n        <Card.Description>{post.content}</Card.Description>\n      </Card.Content>\n      {loggedUser ? (\n        <Card.Content>\n          {post.user.username === loggedUser?.username ? (\n            <Link to={`#`}>\n              <Icon\n                name={\"delete\"}\n                color={\"red\"}\n                onClick={clickHandler}\n                required\n              />\n            </Link>\n          ) : (\n            <>\n              <Link to={`#`}>\n                <Icon\n                  name={\"thumbs up\"}\n                  size=\"large\"\n                  color={likeColor}\n                  onClick={clickHandler}\n                  required\n                />\n              </Link>\n              {post.likes.length}\n            </>\n          )}\n        </Card.Content>\n      ) : null}\n    </Card>\n  );\n}\n\nexport default PostCard;\n","import { Loader } from 'semantic-ui-react'\n\nexport default function Loading() {\n  return (\n \n        <Loader size=\"small\" active>\n          Loading\n        </Loader>\n\n  );\n}","import React from \"react\";\nimport { Card, Dimmer, Segment, Image } from \"semantic-ui-react\";\nimport PostCard from \"../PostCard/PostCard\";\nimport Loader from \"../Loader/Loader\";\n\nexport default function PostGallery({\n  numPhotosCol,\n  posts,\n  isProfile,\n  addLike,\n  removeLike,\n  loading,\n  loggedUser,\n  removePost\n}) {\n\n\n  return (\n    <Card.Group itemsPerRow={numPhotosCol} stackable >\n      {loading ? (\n        <Segment>\n          <Dimmer active inverted>\n            <Loader size=\"small\">Loading</Loader>\n          </Dimmer>\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n        </Segment>\n      ) : null}\n      {posts.map((post) => {\n        return (\n          <PostCard\n            post={post}\n            key={post._id}\n            isProfile={isProfile}\n            loggedUser={loggedUser}\n            removeLike={removeLike}\n            addLike={addLike}\n            removePost={removePost}\n          \n          />\n        );\n      })}\n    </Card.Group>\n  );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Image, Icon } from \"semantic-ui-react\";\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n  console.log(loggedUser, \"loggedUser in header\");\n  \n  if (loggedUser) {\n  return (\n    <Segment clearing>\n      <Header as=\"h2\" floated=\"right\">\n      <Link to=\"/write\">\n            <Icon name=\"edit\" color=\"orange\" avatar/>\n            </Link>\n        <Link to=\"/\">\n          <Icon name=\"home\" color= \"orange\" />\n        </Link>\n\n        <Link to=\"\" onClick={handleLogout}>\n          Logout\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"left\">\n      <Link to={`/${loggedUser?.username}`}>\n          <Image\n            src={\n                loggedUser?.photoUrl\n                ? loggedUser?.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            }\n            avatar\n          ></Image>\n        </Link>\n      </Header>\n    </Segment>\n  );\n}\nreturn (\n  <Segment clearing>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/\">\n          <Icon name=\"home\" color= \"orange\" />\n        </Link>\n        <Link to=\"/login\">\n          Login\n        </Link>\n        <Link to=\"/signup\">\n          Sign Up\n        </Link>\n      </Header>\n    </Segment>\n\n)\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts\";\n\n// This is where we create any of the fetch calls the communicate with the routes\n// in /api/routes (Routes folder => posts\n\nexport function create(post) {\n  return fetch(BASE_URL, {\n    method: \"POST\",\n    body: post,\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json(); // res.ok will be try if the http statusCode in the response is anything in the 200's\n    return res.json().then((response) => {\n        console.log(response, \"<-- Response in postAPI Create\");\n        throw new Error(response.err);\n    })\n  });\n}\n\n\nexport function getAll() {\n  return fetch(BASE_URL, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken() // This grabs thee JWT token out\n      // local storage and send its in the header to the server\n    }\n  })\n  .then((res) => {\n    if(res.ok) return res.json();\n\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  });\n}\n\nexport function getPost(id) {\n  return fetch(`${BASE_URL}/details/${id}`, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), \n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    return res.json().then((response) => {\n      throw new Error(response.err);\n    });\n  });\n}\n\n\n\nexport function deletePost(postId) {\n  console.log(\"Delete api\")\n  return fetch(BASE_URL + \"/\" + postId, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n      // local storage and send its in the header to the server\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n\n    return res.json().then((response) => {\n      console.log(response, \"<----DELETE API\");\n      throw new Error(response.err);\n    });\n  });\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useParams } from \"react-router-dom\";\n\nimport ProfileBio from \"../../components/ProfileBio/ProfileBio\";\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\nimport PageHeader from \"../../components/Header/Header\";\nimport Loading from \"../../components/Loader/Loader\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport * as postsApi from \"../../utils/postApi\"\nimport userService from \"../../utils/userService\";\n\n\nexport default function ProfilePage({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { username } = useParams(); // username is defined in the App folder in the Router path=\"/:username\"\n\n  async function removePost(postId) {\n    try {\n      postsApi.deletePost(postId);\n      getProfile();\n      setLoading(false)\n    } catch (err) {\n      console.log(\"err\", \"This is the error\")\n      setError(err)\n      setLoading(false)\n    }\n  }\n\n  const getProfile = useCallback(async () => {\n    try {\n      const response = await userService.getProfile(username); \n      setLoading(false);\n      setProfileUser(response.data.user);\n      setPosts(response.data.posts);\n\n      console.log(response);\n    } catch (err) {\n      console.log(err.message);\n      setError(\"Profile does not exist! You are in the wrong in place\"); // < this is message we leave the user\n      // to see\n    }\n  }, [username]);\n\n  useEffect(() => {\n    console.log(\"firing!\");\n    // When the page loads, lets send a get request to the server\n    // to get whoever's profile page I'm on. (example, localhost:3000/jim) <-- jim's profile info I want to get\n\n    getProfile();\n  }, [username, getProfile]);\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />;\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n\t\t<PageHeader handleLogout={handleLogout} loggedUser={loggedUser}/>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <ProfileBio user={profileUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column style={{ maxWidth: 1000 }}>\n        <p><h1>Recent Posts</h1></p>\n          <PostGallery\n            posts={posts}\n            numPhotosCol={1}\n            isProfile={true}\n            loading={loading}\n            loggedUser={loggedUser}\n            removePost={removePost}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import tokenService from \"./tokenService\";\n// import the tokenService so we can get the jwt to send\n// over in our requests\n\nconst BASE_URL = \"/api/\";\n\nexport function create(postId) {\n  return fetch(`${BASE_URL}posts/${postId}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n      // local storage and send its in the header to the server\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(res.error);\n  });\n}\n\nexport function removeLike(likeId) {\n  return fetch(`${BASE_URL}likes/${likeId}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n      // local storage and send its in the header to the server\n    }\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(res.error);\n  });\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport PageHeader from \"../../components/Header/Header\";\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport Loading from \"../../components/Loader/Loader\";\n\nimport { Grid } from \"semantic-ui-react\";\n\n// this says import all the export function calls as postsAPI.functionName\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as likesAPI from \"../../utils/likesApi\";\n\nexport default function Feed({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  async function addLike(postId) {\n    try {\n      const response = await likesAPI.create(postId);\n      console.log(response, \"from add like\");\n      getPosts();\n   \n    } catch (err) {\n      console.log(err, \" err from server\");\n      setError(\"error adding like\");\n    }\n  }\n\n  async function removeLike(likeId) {\n    try {\n      const response = await likesAPI.removeLike(likeId);\n      console.log(response, \" remove like\");\n      getPosts();\n    } catch (err) {\n      console.log(err);\n      setError(\"error removing like\");\n    }\n  }\n\n\n  async function getPosts() {\n    try {\n      const response = await postsAPI.getAll();\n      console.log(response, \" data\");\n      setPosts([...response.data]);\n      setLoading(false);\n    } catch (err) {\n      console.log(err.message, \" this is the error\");\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    //Getting posts, C(R)UD\n\n    getPosts();\n  }, []); // This is useEffect runs once when the Feed component\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />;\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 1000 }}>\n          <PostGallery\n            posts={posts}\n            numPhotosCol={1}\n            isProfile={false}\n            removeLike={removeLike}\n            addLike={addLike}\n            loading={loading}\n            loggedUser={loggedUser}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport PostGallery from \"../PostGallery/PostGallery\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport default function PostDisplayForm({posts,isProfile,addLike,removeLike,loggedUser,setPosts,setProfileUser,itemsPerRow}) {\n  return (\n    <Grid centered>\n      <Grid.Row >\n        <Grid.Column centered>\n          <div className=\"post-details\">\n            <PostGallery\n              posts={posts}\n              key={posts._id}\n              isProfile={isProfile}\n              removeLike={removeLike}\n              addLike={addLike}\n              loggedUser={loggedUser}\n              setPosts={setPosts}\n              setProfileUser={setProfileUser}\n              itemsPerRow={itemsPerRow}\n            />\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}","import React, { useState, useEffect, useCallback  } from \"react\";\nimport { useParams } from \"react-router-dom\"; \n\nimport PageHeader from \"../../components/Header/Header\";\nimport PostDisplay from \"../../components/PostDisplay/PostDisplay\";\n\nimport Loading from \"../../components/Loader/Loader\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport { Grid } from \"semantic-ui-react\";\n\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as likesAPI from \"../../utils/likesApi\";\n\n\nexport default function PostDetail({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const {id} = useParams();\n\n  async function addLike(postId) {\n    // Where is the postId defined in the UI?\n\n    try {\n      const response = await likesAPI.create(postId);\n      console.log(response, \"from add like\");\n      getPost();\n    } catch (err) {\n      console.log(err, \" err from server\");\n      setError(\"error adding like\");\n    }\n  }\n\n  async function removeLike(likeId) {\n    try {\n      const response = await likesAPI.removeLike(likeId);\n      console.log(response, \" remove like\");\n      getPost();\n    } catch (err) {\n      console.log(err);\n      setError(\"error removing like\");\n    }\n  }\n\n  \n  const getPost = useCallback(async () => {\n    try {\n      const response = await postsAPI.getPost(posts);\n      setPosts([response.data.posts]);\n      setLoading(false);\n    } catch (err) {\n      console.log(err.message, \" this is the error\");\n      setLoading(false);\n      setError(\"Post does not exist! Please try again.\");\n    }\n  }, [posts]);\n\n  useEffect(() => {\n    getPost();\n  }, [posts, getPost]);\n\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />\n      </>\n    );\n  }\n\n \n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <PostDisplay\n            itemsPerRow={1}\n            posts={posts}\n            isProfile={true}\n            loading={loading}\n            loggedUser={loggedUser}\n            addLike={addLike}\n            removeLike={removeLike}\n            setPosts={setPosts}\n            \n          />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}></Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nexport default function AddPostForm(props) {\n  const [state, setState] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n    formData.append(\"title\", state.title);\n    formData.append(\"content\", state.content);\n    props.handleAddPost(formData);\n    navigate(\"/\");\n    }\n   \n \n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-control\"\n          name=\"title\"\n          value={state.title}\n          placeholder=\"Title\"\n          onChange={handleChange}\n          required\n        />\n        <Form.Input>\n          <TextArea\n          className=\"form-control\"\n          name=\"content\"\n          value={state.content}\n          placeholder=\"Content Here\"\n          onChange={handleChange}\n          required\n        /></Form.Input>\n          <Form.Input\n            type=\"file\"\n            name=\"photo\"\n            placeholder=\"upload image\"\n            onChange={handleFileInput}\n          />\n        <Button type=\"submit\" className=\"btn\">\n          Add Post\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/Header/Header\";\nimport AddPost from \"../../components/AddPost/AddPost\";\n\nimport { Grid } from \"semantic-ui-react\";\nimport * as postsAPI from \"../../utils/postApi\";\n\nexport default function Write({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  async function handleAddPost(post) {\n    \n    try {\n      console.log('creating post!');\n      const response = await postsAPI.create(post); // waiting for the json to be return from the server and parsed by us!\n\n      // data is the response from the api, the result of the .then if(res.ok) return res.json() in the create postAPI utils function\n      console.log(response);\n      setPosts([response.data, ...posts]); /// ...posts would keep all the posts in the previous states array\n    } catch (err) {\n      // this is the error from the throw block, in the postsAPI.create function\n      console.log(err.message);\n      setError(\"Error creating post, please try again\");\n    }\n  }\n\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className=\"header-clearance\">\n        <Grid.Column textAlign=\"center\">\n          <p className=\"large-font-size sub-header\">Blog Post</p>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ width: 150 }}>\n        </Grid.Column>\n        <Grid.Column style={{ width: 450 }}>\n          <AddPost handleAddPost={handleAddPost} />\n          <p>{error}</p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}","import React, { useState } from \"react\";\nimport { Navigate, useNavigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport Profile from \"../Profile/Profile\";\nimport FeedPage from \"../Feed/Feed\";\nimport PostDetail from \"../PostDetailPage/PostDetail\";\nimport Write from \"../Write/Write\";\nimport userService from \"../../utils/userService\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); \n\n  const navigate = useNavigate();\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n    navigate(\"/\");\n  }\n\n  if (user) {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<FeedPage loggedUser={user} handleLogout={handleLogout} />} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/:username\"\n          element={<Profile loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/details/:id\"\n          element={\n            <PostDetail loggedUser={user} handleLogout={handleLogout} />\n          }\n        />\n        <Route\n          path=\"/write\"\n          element={<Write loggedUser={user} handleLogout={handleLogout} />}\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<FeedPage loggedUser={user} handleLogout={handleLogout} />} />\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n       <Route\n        path=\"/\"\n        element={<FeedPage loggedUser={user} handleLogout={handleLogout} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}